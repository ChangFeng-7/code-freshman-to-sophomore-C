//编写程序，判断用户的单选题答对了几题。 说明: 1--以十个判断题为例，用户提交的答案应该是长度为十的字符串，如："ABCDDCBACD"，字符的位置代表了题号，选择项当然是字符集['A','B','C','D'']之一。 2--标准答案是一个长整数（8个字节，64个二进制位），长整数的二进制存储中，用两个二进制位来对应一个答案：00-A,01-B,10-C,11-D，一个长整数可标记32个题目的答案。如228的整数机内表示的最低八位是11 10 01 00，它表示前四题的答案依次是ABCD。
//
//输入格式:
//输入内容有二行： 第一行，用户提交的答题选项：每个字符代表一个选项（ABCD之一），字符串的长度表示题目数量（范围在【5，32】内）。 第二行，一个用二进制位来表示标准答案的长整数（注意，不是字符串）。
//
//输出格式:
//输出用户单选题回答正确数量（多少题与标准答案相同）。
//对了几个题
#include<stdio.h>
//对了几个题
int main()
{
    long long n;
    int i=0,j=0,sum=0;
    char a[40];
    while((a[i]=getchar())!='\n')
        ++i;//记录题目数
    scanf("%lld",&n);
    while(j<=i)
    {
        if((n&3)==(a[j]-'A'))
            ++sum;
        n>>=2;//n=n>>2
        ++j;
    }
    printf("%d",sum);
    return 0;
}
//2. 右移运算符>>
//
//运算规则：对运算符>>左边的运算量的每一位全部右移右边运算量表示的位数，右边低位被移出去舍弃掉，空出的高位补0还是补1，分两种情况：
//
//(1)对无符号数进行右移时，空出的高位补0。这种右移称为逻辑右移。
//
//(2)对带符号数进行右移时，空出的高位全部以符号位填补。即正数补0，负数补1。这种右移称为算术右移。
//左移运算符：
// 运算规则：对运算符<<左边的运算量的每一位全部左移右边运算量表示的位数，右边空出的位补0。